@startuml
'https://plantuml.com/class-diagram

class Platform{
- String platformName
- User currentUser
- User averageUser
-ArrayList<User> users
}

class Main
class User{
- String username
- String name
- String password
- String gender
- String address
- Co2 co2Counter
- HashMap<Date, Co2> counterCalendar
- Car myCar
- double baseline
}

abstract Co2{
# double co2Gram
- double calCo2()
- void userEducation()
}

abstract Emission{
# double co2Gram

}

abstract Offset{
# double co2Gram
}

class PlantTree{
# double co2Gram
- int plantedTrees
+ boolean selfPlant(int trees)
+ boolean pay2Plant(int amount)
}

class RenewableEnergy{
# double co2Gram
- String energyType
+ double co2Saving()
}

interface PublicTransport{
+ double convertTimeToKm()
}

abstract class Transport{
- String type
- double co2PrKm
# double co2Gram
}

class Car{
- String type
- String licensePlate
- String fuelType
- float kmPrLitre
# double co2Gram
}

class Plane implements PublicTransport{
- String type
- double co2PrKm
+ double convertTimeToKm()
# double co2Gram
}

class Train implements PublicTransport{
- String type
- double co2PrKm
+ double convertTimeToKm()
# double co2Gram
}

class Bus implements PublicTransport{
- String type
- double co2PrKm
+ double convertTimeToKm()
# double co2Gram
}

class BikeWalk{
- String type
- double co2PrKm
# double co2Gram
}

class Fabric{
- String type
- double co2Gram
}

class Clothes{
- String type
- double weight
+ double calCo2PrItem(Fabric fabricType)
# double co2Gram
}

package "Util"{
class FileIO{
+FileReaderDB()
+FileReaderCSV()
+FileWriterDB()
+FileWriterCSV()
}
}

package "GUI"{
class Controller
}

Main*-- Platform

Emission <|-- Transport

Platform *-- User

Emission <|-- Clothes

Clothes *-- Fabric

User *-- Car
User *-- Co2

Co2 *-- Emission
Co2 *-- Offset

Offset <|-- RenewableEnergy

Offset <|-- PlantTree

Transport <|-- Plane
Transport <|-- BikeWalk
Transport <|-- Bus
Transport <|-- Car
Transport <|-- Train



@enduml