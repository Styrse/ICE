@startuml
'https://plantuml.com/class-diagram

class Address{
- String street
- String houseNumber
- String postcode
- String city
- String country
+ Address(String street, String houseNumber, String postcode, String city, String country)
+ String saveAddressInfo()
}

class Clothes{
- String type
- int weightGrams
+ Clothes(String type, int weight)
+ String saveClothesInfo()
}

abstract Co2{
# double co2Gram
- double calCo2()
- void userEducation()
}

abstract Emission{
- double co2Gram
+ Emission(double co2Gram)
}

class Fabric{
- String type
- double co2Gram
+ Fabric(String type, double co2Gram)
+ String saveFabricInfo()
}

package "Util"{
class FileIO{
+ static ArrayList<String> FileReader(String path)
+ static FileWriter(ArrayList<String> data, String path)
}
}

enum Food{
Food(int co2GramsPrMeal)
}

class GUI{
+ void start(Stage stage)
+ void static main(String[] args)
}

class Issue{
- int issueID
- static int issueCount
- User currentUser
- Exception exception
+ Issue(User user, Exception exception)
}

class IT{
- ArrayList<Issue> issues
+ IT()
+ void addIssue(Issue issue)
+ void removeIssue()
}

class Load{
- ArrayList<User> users;
- ArrayList<Clothes> clothes;
- ArrayList<Fabric> fabrics;
- ArrayList<Transport> transports;
- ArrayList<RenewableEnergy> renewableEnergies;
- ArrayList<Food> foods;
+ Load(ArrayList<User> users, ArrayList<Clothes> clothes, ArrayList<Fabric> fabrics, ArrayList<Transport> transports, ArrayList<RenewableEnergy> renewableEnergies, ArrayList<Food> foods)
+ void loadSetup()
+ void loadPublicTransport()
+ void loadCarData()
+ void loadUSers()
+ void loadFabrics()
+ void loadClothes()
}

abstract Offset{
}

class Platform{
- String platformName
- User currentUser
- User averageUser
- ArrayList<User> users
- ArrayList<Clothes> clothes
- ArrayList<Fabric> fabrics
- ArrayList<Transport> transport
- ArrayList<RenewableEnergy> renewableEnergy
- ArrayList<Food> food
+ Platform(String platformName)
+ void setup()
}

class RenewableEnergy{
}

class Transport{
- String vehicleType
- double averageSpeed
- double co2PrKm
+ Transport(String vehicleType, double averageSpeed, double co2PrKm)
+ double emissionPrMin()
+ String saveTransportInfo()
+ String toString()
}

class User{
- String username
- String name
- String password
- String gender
- Date birthday
- String address
- Co2 co2Counter
- HashMap<Date, Co2> counterCalendar
- Car myCar
- double baseline
- int userId
- static int idCount = 1
+ User(String username, String name, String password, String gender, Date birthday, Address address)
+ String saveUserInfo()
}


class PlantTree{
# double co2Gram
- int plantedTrees
+ boolean selfPlant(int trees)
+ boolean pay2Plant(int amount)
}


class Car{
- String licensePlate
- carBrand
- String fuelType
- float kmPrLitre
- HashMap<String, double> fuelCo2PrKm
- ArrayList<Car> cars
- User user
+ Car(String licensePlate,String carBrand, String fuelType,float kmPrLitre)
+ void initialiseFuelCo2PrKm()
+ Double fuelTypeToCo2PrLiter(String fuelType)
+ void saveCarDataToText()
+ void setCurrentUser(User currentUser)
+ String toString()
}

GUI *-- Platform


Emission <|-- Clothes
Emission <|-- Food

Platform *-- User
Platform *-- Load
Platform *-- IT

IT *-- Issue

User *-- Car
User *-- Co2
User *-- Address

Clothes *-- Fabric

Co2 *-- Emission
Co2 *-- Offset

Offset <|-- RenewableEnergy

Offset <|-- PlantTree

Transport <|-- Car


GUI *-- "controllers"

package "controllers"{
class createUserSceneController
class frontSceneController
class loginSceneController
class mainMenuSceneController
}

@enduml